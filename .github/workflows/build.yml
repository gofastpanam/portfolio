name: üê≥ Build And Push Docker Image

on:
  push:
    branches:
      - main
      - dev
  workflow_call:
    inputs:
      tag:
        type: string
        description: The tag to push to the Docker registry.
        required: false
        default: 'latest'

permissions: read-all

jobs:
  lint:
    name: ‚¨£ ESLint
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üèó Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üî¨ Lint
        run: npm run lint

  typecheck:
    name:  ¶ TypeScript
    runs-on: ubuntu-latest
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.11.0

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4

      - name: üèó Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üîé Type check
        run: npm run typecheck

  build:
    name: üê≥ Build
    needs: [lint, typecheck]
    runs-on: ubuntu-latest
    
    steps:
      - name: üõë Cancel Previous Runs
        uses: styfle/cancel-workflow-action@0.12.1

      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v3

      - name: üèó Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: üì¶ Install dependencies
        run: npm ci

      - name: üßë‚Äçüíª Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          logout: true

      - name: üê≥ Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: ‚ö°Ô∏è Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: üè∑Ô∏è Set environment variables
        id: env
        run: |
          # Initialize ENV_TAG based on input or branch
          if [[ -n "${{ inputs.tag }}" ]]; then
            echo "ENV_TAG=${{ inputs.tag }}" >> "$GITHUB_OUTPUT"
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "ENV_TAG=production" >> "$GITHUB_OUTPUT"
          else
            echo "ENV_TAG=staging" >> "$GITHUB_OUTPUT"
          fi

          # Set APP_ENV based on the branch
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "APP_ENV=${{ secrets.APP_ENV_PRODUCTION }}" >> $GITHUB_ENV
          else
            echo "APP_ENV=${{ secrets.APP_ENV_STAGING }}" >> $GITHUB_ENV
          fi

      - name: üê≥ Build and Push Image
        uses: docker/build-push-action@v3
        env:
          APP_ENV: ${{ env.APP_ENV }}
        with:
          context: .
          push: true
          tags: benjamin8972/portfolio:${{ steps.env.outputs.ENV_TAG }}
          build-args: |
            COMMIT_SHA=${{ github.sha }}
            APP_ENV=${{ env.APP_ENV }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new

      - name: üöö Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache